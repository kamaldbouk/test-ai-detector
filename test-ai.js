// This file was generated by an AI assistant
// The following code demonstrates a simple REST API using Express in Node.js
// It includes user authentication, data validation, and CRUD operations
// NOTE: This is just an example and may not be production-ready

const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");

/**
 * Initialize the application
 * - Create an Express app
 * - Configure middleware
 * - Define routes
 * - Start server
 */

const app = express();
app.use(cors());
app.use(bodyParser.json());

/**
 * In-memory storage of users.
 * In a real application, you would use a database.
 */
let users = [];

/**
 * POST /register
 * Registers a new user with username and password.
 */
app.post("/register", (req, res) => {
  const { username, password } = req.body;

  // Validate input
  if (!username || !password) {
    return res.status(400).json({ error: "Username and password required" });
  }

  // Check if user already exists
  const exists = users.find((u) => u.username === username);
  if (exists) {
    return res.status(409).json({ error: "User already exists" });
  }

  // Save user
  users.push({ username, password });
  return res.status(201).json({ message: "User registered successfully" });
});

/**
 * POST /login
 * Authenticates a user based on username and password.
 */
app.post("/login", (req, res) => {
  const { username, password } = req.body;

  // Validate input
  if (!username || !password) {
    return res.status(400).json({ error: "Username and password required" });
  }

  // Check credentials
  const user = users.find((u) => u.username === username && u.password === password);
  if (!user) {
    return res.status(401).json({ error: "Invalid credentials" });
  }

  return res.status(200).json({ message: "Login successful" });
});

/**
 * GET /users
 * Returns the list of registered users.
 */
app.get("/users", (req, res) => {
  return res.json(users);
});

// Start server
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
